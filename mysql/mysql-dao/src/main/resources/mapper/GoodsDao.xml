<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.life.mysql.dao.GoodsDao">

    <resultMap type="com.life.mysql.entity.Goods" id="GoodsMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="stock" column="stock" jdbcType="INTEGER"/>
        <result property="version" column="version" jdbcType="INTEGER"/>
        <result property="startTime" column="start_time" jdbcType="TIMESTAMP"/>
        <result property="endTime" column="end_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="GoodsMap">
        select id, name, stock, version, start_time, end_time
        from t_goods
        where id = #{id} for update;
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="GoodsMap">
        select
          id, name, stock, version, start_time, end_time
        from t_goods
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="GoodsMap">
        select
          id, name, stock, version, start_time, end_time
        from t_goods
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="stock != null">
                and stock = #{stock}
            </if>
            <if test="version != null">
                and version = #{version}
            </if>
            <if test="startTime != null">
                and start_time = #{startTime}
            </if>
            <if test="endTime != null">
                and end_time = #{endTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into t_goods(name, stock, version, start_time, end_time)
        values (#{name}, #{stock}, #{version}, #{startTime}, #{endTime})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update t_goods
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="stock != null">
                stock = #{stock},
            </if>
            <if test="version != null">
                version = #{version},
            </if>
            <if test="startTime != null">
                start_time = #{startTime},
            </if>
            <if test="endTime != null">
                end_time = #{endTime},
            </if>
        </set>
        where id = #{id};
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from t_goods where id = #{id}
    </delete>

    <select id="queryByIdOptimistic" resultMap="GoodsMap">
        select id, name, stock, version, start_time, end_time
        from t_goods
        where id = #{id}
    </select>

    <update id="updateOptimistic">
        update t_goods
        <set>
            stock = stock - 10,
            version = version+1
        </set>
        where id = #{id} and version = #{version}
    </update>

    <update id="inventoryReduction">
        update t_goods set stock = stock - 10 where id = 1 and stock > 0
    </update>
</mapper>